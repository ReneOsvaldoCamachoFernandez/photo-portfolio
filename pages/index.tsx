import { Tab } from "@headlessui/react";
import Head from "next/head";
import Link from "next/link";
import Masonry from "react-masonry-css";
import classNames from "classnames";
import Image from "next/image";
import bgImage from "../public/photography-bg.jpg";

//////////////////////

import { GetStaticProps } from "next";
import type { HomeProps, Photo } from "@/types";
import nodeFetch from "node-fetch";
import { createApi } from "unsplash-js";
import { Gallery } from "@/components/Gallery";
import { getImages } from "@/utils/image-util";

const tabs = [
  {
    key: "all",
    display: "All",
  },
  {
    key: "oceans",
    display: "Oceans",
  },
  {
    key: "forest",
    display: "Forest",
  },
];
/////////////////////////////////
/*steps to set the static charge of the photos*/
/////////////////////////////////

export const getStaticProps: GetStaticProps<HomeProps> = async () => {
  const unsplash = createApi({
    accessKey: process.env.UNSPLASH_ACCESS_KEY!,
    fetch: nodeFetch as unknown as typeof fetch,
  });

  const [oceans, forests] = await Promise.all([
    getImages(unsplash, "oceans"),
    getImages(unsplash, "forests"),
  ]);

  return Promise.resolve({
    props: {
      oceans,
      forests,
    },
  });
};
////////////////////////////////

export default function Home({ oceans, forests }: HomeProps) {
  return (
    <div className="h-full overflow-auto">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Image
        className="fixed top-o left-0 z-0"
        src={bgImage}
        alt="bg placeholder"
        placeholder="blur"
      />
      <div className="fixed top-0 left-0 w-full h-full from-stone-900 bg-gradient-to-t z-10"></div>
      <header className="bg-black fixed w-full top-0 z-30 flex justify-between items-center h-[90px] px-10">
        <div>
          <span className="uppercase text-lg font-medium">
            Photography Portfolio
          </span>
        </div>

        <Link
          href="#"
          className="rounded-3xl bg-white text-stone-700 px-3 py-2 hover:bg-opacity-90"
        >
          Get in touch
        </Link>
      </header>
      <main className="pt-[110px] z-20 relative">
        <div className="flex flex-col items-center h-full">
          <Tab.Group>
            <Tab.List className="flex  items-center gap-20">
              {tabs.map((tab) => (
                <Tab key={tab.key} className="p-2">
                  {({ selected }) => (
                    <span
                      className={classNames(
                        "uppercase text-lg",
                        selected ? "text-white" : "text-stone-600"
                      )}
                    >
                      {tab.display}
                    </span>
                  )}
                </Tab>
              ))}
            </Tab.List>
            <Tab.Panels className="p-2 sm:p-4 h-full max-w-[900px] w-full my-6">
              <Tab.Panel className="overflow-auto">
                <Gallery photos={[...oceans, ...forests]} />
              </Tab.Panel>
              <Tab.Panel className="overflow-auto">
                <Gallery photos={oceans} />
              </Tab.Panel>
              <Tab.Panel className="overflow-auto">
                <Gallery photos={forests} />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
      </main>
      <footer className="uppercase text-lg font-medium flex justify-center items-center h-[90px] z-20 relative">
        <p>placeholder for footer</p>
      </footer>
    </div>
  );
}
